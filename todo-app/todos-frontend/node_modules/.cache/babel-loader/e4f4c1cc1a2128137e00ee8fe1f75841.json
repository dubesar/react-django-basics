{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nexport const getTasks = createAsyncThunk('task/getTasks', async () => {\n  return fetch(\"http://127.0.0.1:8000/todo/\").then(res => res.json());\n});\nconst taskSlice = createSlice({\n  name: 'task',\n  initialState: {\n    taskList: [],\n    status: null\n  },\n  extraReducers: {\n    [getTasks.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [getTasks.fulfilled]: (status, {\n      payload\n    }) => {\n      state.list = payload;\n      state.status = 'success';\n    },\n    [getTasks.rejected]: (status, action) => {\n      state.status = 'failed';\n    }\n  }\n});\nexport default taskSlice.reducer;","map":{"version":3,"sources":["/home/dubesar/Documents/learn-django/learn-django-rest-framework/react-django-basics/todo-app/todos-frontend/src/features/tasks/taskSlice.js"],"names":["createSlice","createAsyncThunk","getTasks","fetch","then","res","json","taskSlice","name","initialState","taskList","status","extraReducers","pending","state","action","fulfilled","payload","list","rejected","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AAEA,OAAO,MAAMC,QAAQ,GAAGD,gBAAgB,CACpC,eADoC,EAEpC,YAAY;AACR,SAAOE,KAAK,CAAE,6BAAF,CAAL,CAAuCC,IAAvC,CAA+CC,GAAF,IAAWA,GAAG,CAACC,IAAJ,EAAxD,CAAP;AACH,CAJmC,CAAjC;AAOP,MAAMC,SAAS,GAAGP,WAAW,CAAE;AAC3BQ,EAAAA,IAAI,EAAE,MADqB;AAE3BC,EAAAA,YAAY,EAAE;AACVC,IAAAA,QAAQ,EAAC,EADC;AAEVC,IAAAA,MAAM,EAAE;AAFE,GAFa;AAM3BC,EAAAA,aAAa,EAAE;AACX,KAACV,QAAQ,CAACW,OAAV,GAAoB,CAAEC,KAAF,EAASC,MAAT,KAAqB;AACrCD,MAAAA,KAAK,CAACH,MAAN,GAAe,SAAf;AACH,KAHU;AAIX,KAACT,QAAQ,CAACc,SAAV,GAAsB,CAAEL,MAAF,EAAU;AAACM,MAAAA;AAAD,KAAV,KAAyB;AAC3CH,MAAAA,KAAK,CAACI,IAAN,GAAaD,OAAb;AACAH,MAAAA,KAAK,CAACH,MAAN,GAAe,SAAf;AACH,KAPU;AAQX,KAACT,QAAQ,CAACiB,QAAV,GAAqB,CAAER,MAAF,EAAUI,MAAV,KAAsB;AACvCD,MAAAA,KAAK,CAACH,MAAN,GAAa,QAAb;AACH;AAVU;AANY,CAAF,CAA7B;AAoBA,eAAeJ,SAAS,CAACa,OAAzB","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const getTasks = createAsyncThunk(\n    'task/getTasks',\n    async () => {\n        return fetch( \"http://127.0.0.1:8000/todo/\" ).then( ( res ) => res.json() );\n    }\n)\n\nconst taskSlice = createSlice( {\n    name: 'task',\n    initialState: {\n        taskList:[],\n        status: null,\n    },\n    extraReducers: {\n        [getTasks.pending]: ( state, action ) => {\n            state.status = 'loading'\n        },\n        [getTasks.fulfilled]: ( status, {payload} ) => {\n            state.list = payload\n            state.status = 'success'\n        },\n        [getTasks.rejected]: ( status, action ) => {\n            state.status='failed'\n        }\n    }\n} )\n\nexport default taskSlice.reducer"]},"metadata":{},"sourceType":"module"}